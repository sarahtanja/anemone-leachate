---
title: "Respirometry analysis: Part 2"
subtitle: "Get background rates from the `blank` chambers"
author: "Sarah Tanja"
date: "`r format(Sys.time(), '%d %B, %Y')`"  
format:
  html:
    df-print: paged
    toc: true
    toc-location: right
    smooth-scroll: true
    link-external-icon: true
    link-external-newwindow: true
    code-fold: false
    code-tools: true
    code-copy: true
    highlight-style: breeze
    code-overflow: wrap
    theme: minty
editor: 
  markdown: 
    wrap: 72
bibliography: references.bib
---

# Install and load packages

```{r messages = FALSE}
# Install packages
if ("tidyverse" %in% rownames(installed.packages()) == 'FALSE') install.packages('tidyverse')
if ("dplyr" %in% rownames(installed.packages()) == 'FALSE') install.packages('dplyr')
if ("lubridate" %in% rownames(installed.packages()) == 'FALSE') install.packages('lubridate')
if ("respR" %in% rownames(installed.packages()) == 'FALSE') install.packages('respR')
if ("car" %in% rownames(installed.packages()) == 'FALSE') install.packages('car')
if ("kableExtra" %in% rownames(installed.packages()) == 'FALSE') install.packages('kableExtra')

# Load packages
library(dplyr)
library(tidyverse)
library(lubridate)
library(respR)
library(car)
library(kableExtra)
```

# Load in dataframes

```{r}
# Get a list of all CSV files in your output folder
csv_files <- list.files("output", pattern = "\\.csv$", full.names = TRUE)

# Loop through each CSV file and read it into a dataframe
for (file in csv_files) {
  # Extract the dataframe name from the file name
  df_name <- sub("\\.csv$", "", basename(file))
  # Read the CSV file into a dataframe and assign it the dataframe name
  assign(df_name, read.csv(file, check.names = FALSE))
}

# Now you'll have dataframes named after the CSV files
# For example, if you have a file named "example.csv", you'll have a dataframe named "example"
```

# Convert wet_weight to mg_protein

First we define a function that represents the equation published in
@dimond2011 in Table 1. relating the wet weight of *Anthopleura
elegantissima* to the milligrams of protein content in the whole
homogenized anemone. @dimond2011 found that wet weight was a better
indicator of milligrams of protein than oral disc diameter
($r^{2} = 0.80$). Wet weight was measured after separating each anemone
from their petri dish, and blotting them with a towel for 5 seconds,
being careful to 'gently press' any retained water from their
coelenteron.

```{r}
wet_to_protein <- function(x) {
  67.31 * exp(0.3143 * x)
}
```

```{r}
merged_metadata <- merged_metadata %>% 
  mutate(mg_protein = wet_to_protein(wet_weight_g))
```

Next, we call the function on the wet_weight column and make a new
column, `mg_protein`

# Merge metadata with resp & phot dataframes

```{r}
resp_rates <- merge(resp_rates, merged_metadata)
phot_rates <-  merge(phot_rates, merged_metadata)
```

# Respiration

```{r}
print(resp_rates)
```

```{r}
resp_rates <- resp_rates %>% 
  select(-c('Date', 'RLC_start', 'RLC_end', 'RLC', 'Respirometry', 'whole_anemone', 
            'date', 'time-resp-end', 'min-D-L', 'filename', 'ext', 'notes'))
print(resp_rates)
```

## Coalesce qaqc column back into the resp_rate column

This is to make the resp_rate and resp_r2 'verified rate' column and
r-square values

```{r}
resp_rates <- resp_rates %>%
  mutate(resp_rate = coalesce(qaqc_resp_rate, resp_rate)) %>% 
  mutate(resp_r2 = coalesce(qaqc_resp_r2, resp_r2))

print(resp_rates)
```

## Subtract the background rates by run, channel, and mean

```{r}
# By run
resp_rates <- resp_rates %>% 
  mutate(resp_rate_bg_adj_run = resp_rate - resp_bg_rate_run) %>% 
        relocate(resp_rate_bg_adj_run, .after = "resp_r2")


# By channel
resp_rates <- resp_rates %>% 
  mutate(resp_rate_bg_adj_channel = resp_rate - resp_bg_rate_channel) %>% 
        relocate(resp_rate_bg_adj_channel, .after = "resp_r2")

# By mean
resp_rates <- resp_rates %>% 
  mutate(resp_rate_bg_adj_mean = resp_rate - resp_bg_rate_mean) %>% 
        relocate(resp_rate_bg_adj_mean, .after = "resp_r2")

print(resp_rates)
```

```{r}
hist(resp_rates$resp_rate_bg_adj_run)
hist(resp_rates$resp_rate_bg_adj_channel)
hist(resp_rates$resp_rate_bg_adj_mean)
```

## Is the blank even any different?

```{r}
blank_aov <- aov(resp_rate_bg_adj_run ~ treatment,
  data = resp_rates
)

summary(blank_aov)

```

```{r}
ggplot(resp_rates) +
  aes(x = treatment, y = resp_rate_bg_adj_run, fill= treatment) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
   labs(
    title = "Concentration vs. Respiration",
    x = "Leachate concentration (mg/L)",
    y = "Respiration"
  )
```

::: callout-warning
The metabolic signature of the filtered seawater is overpowering the
signature of the anemones. This data is invalid. In order to get valid
respirometry data, we may need to run respirometry for 24-hours,
possibly using artificial seawater to ensure no interference by
microbes.
:::

## Normalize by wet_weight

Using respR
[convert_rate()](https://januarharianto.github.io/respR/reference/convert_rate.html)
by mass

The oxygen units are in ppm (mg/L)

The mass units are in grams

The time units are in decimal min

The respirometer effective volume: 317mL = 0.317L

```{r}
resp_rates <- resp_rates %>%
  mutate(
    resp_rate_adj_run_norm_wetweight =
      convert_rate(
      resp_rate_bg_adj_run,
      oxy.unit = 'mg/l',
      time.unit = 'm',
      output.unit = 'mg/min/g',
      volume = 0.317,
      mass = wet_weight_g
    )$rate.output 
  ) %>% 
  relocate(resp_rate_adj_run_norm_wetweight, .after = resp_rate_bg_adj_run) 

print(resp_rates)

```

## Normalize by mg_protein

```{r}
resp_rates <- resp_rates %>%
  mutate(
    resp_rate_adj_run_norm_protein =
      convert_rate(
      resp_rate_bg_adj_run,
      oxy.unit = 'mg/l',
      time.unit = 'm',
      output.unit = 'mg/min/mg',
      volume = 0.317,
      mass = mg_protein
    )$rate.output 
  ) %>% 
  relocate(resp_rate_adj_run_norm_protein, .after = resp_rate_bg_adj_run) 

print(resp_rates)
```

## Filter out blank

```{r}
resp_rates <- resp_rates %>% filter(id != "blank")
resp_rates
hist(resp_rates$resp_rate_adj_run_norm_wetweight)
hist(resp_rates$resp_rate_adj_run_norm_protein)
```

```{r}
ggplot(resp_rates) +
  aes(x = treatment, y = resp_rate_adj_run_norm_wetweight, fill= treatment) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
   labs(
    title = "Concentration vs. Respiration",
    x = "Leachate concentration (mg/L)",
    y = "Respiration (mg/min/g wet weight)"
  )

```

```{r}
ggplot(resp_rates) +
  aes(x = treatment, y = resp_rate_adj_run_norm_protein, fill= treatment) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
   labs(
    title = "Concentration vs. Respiration",
    x = "Leachate concentration (mg/L)",
    y = "Respiration (mg/min/mg protein)"
  )
```

# Photosynthesis

```{r}
phot_rates <- phot_rates %>% 
  select(-c('Date', 'RLC_start', 'RLC_end', 'RLC', 'Respirometry','whole_anemone','date', 'time-resp-end', 'min-D-L', 'filename', 'ext', 'notes'))
print(phot_rates)
```

## Coalesce qaqc column back into phot_rates column

```{r}
phot_rates <- phot_rates %>%
  mutate(phot_rate = coalesce(qaqc_phot_rate, phot_rate)) %>% 
  mutate(phot_r2 = coalesce(qaqc_phot_r2, phot_r2))

print(phot_rates)
```

## Subtract the background rates by run, channel, and mean

```{r}
# By run
phot_rates <- phot_rates %>% 
  mutate(phot_rate_bg_adj_run = phot_rate - phot_bg_rate_run) %>% 
        relocate(phot_rate_bg_adj_run, .after = "phot_r2")


# By channel
phot_rates <- phot_rates %>% 
  mutate(phot_rate_bg_adj_channel = phot_rate - phot_bg_rate_channel) %>% 
        relocate(phot_rate_bg_adj_channel, .after = "phot_r2")

# By mean
phot_rates <- phot_rates %>% 
  mutate(phot_rate_bg_adj_mean = phot_rate - phot_bg_rate_mean) %>% 
        relocate(phot_rate_bg_adj_mean, .after = "phot_r2")

print(phot_rates)
```

## Is the blank even any different?

```{r}
blank_aov <- aov(phot_rate_bg_adj_run ~ treatment,
  data = phot_rates
)

summary(blank_aov)

```

```{r}
ggplot(phot_rates) +
  aes(x = treatment, y = phot_rate_bg_adj_run, fill= treatment) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
   labs(
    title = "Concentration vs. Photosynthesis",
    x = "Leachate concentration (mg/L)",
    y = "Photosynthesis"
  )
```

::: callout-warning
The same issue persists with the data. There is no signature of
photosynthesis from the symbiotic B. muscatinei, the data is 'washed
out' by the background or 'blank'.
:::

## Normalize by wet_weight

```{r}
phot_rates <- phot_rates %>%
  mutate(
    phot_rate_adj_run_norm_wetweight = as.numeric(
      convert_rate(
      phot_rate_bg_adj_run,
      oxy.unit = 'mg/l',
      time.unit = 'm',
      output.unit = 'mg/min/g',
      volume = 0.317,
      mass = wet_weight_g
    )$rate.output 
  )) %>% 
  relocate(phot_rate_adj_run_norm_wetweight, .after = phot_rate_bg_adj_run) 

print(phot_rates)
```

## Normalize by mg_protein

```{r}
phot_rates <- phot_rates %>%
  mutate(
    phot_rate_adj_run_norm_protein = as.numeric(
      convert_rate(
      phot_rate_bg_adj_run,
      oxy.unit = 'mg/l',
      time.unit = 'm',
      output.unit = 'mg/min/mg',
      volume = 0.317,
      mass = mg_protein
    )$rate.output 
  )) %>% 
  relocate(phot_rate_adj_run_norm_protein, .after = phot_rate_bg_adj_run) 

print(phot_rates)
```

## Filter out blank

```{r}
phot_rates <- phot_rates %>% filter(id != "blank")
phot_rates
hist(phot_rates$phot_rate_adj_run_norm_wetweight)
hist(phot_rates$phot_rate_adj_run_norm_protein)
```

## Calculate gross photosynthesis

```{r}
phot_rates <- phot_rates %>% mutate(gross_photosynthesis_protein = phot_rate_adj_run_norm_protein - resp_rates$resp_rate_adj_run_norm_protein)
```

```{r}
phot_rates <- phot_rates %>% mutate(gross_photosynthesis_wetweight = phot_rate_adj_run_norm_wetweight - resp_rates$resp_rate_adj_run_norm_wetweight)
```

```{r}
hist(phot_rates$gross_photosynthesis_protein)
hist(phot_rates$gross_photosynthesis_wetweight)
```

```{r}
ggplot(phot_rates) +
  aes(x = treatment, y = gross_photosynthesis_wetweight, fill= treatment) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
   labs(
    title = "Concentration vs. Gross Photosynthesis normalized by wet weight",
    x = "Leachate concentration (mg/L)",
    y = "Gross Photosynthesis (mg/L/g anemone wet weight)"
  )
```

```{r}
ggplot(phot_rates) +
  aes(x = treatment, y = gross_photosynthesis_protein, fill= treatment) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
   labs(
    title = "Concentration vs. Gross Photosynthesis normalized by anemone protein content",
    x = "Leachate concentration (mg/L)",
    y = "Gross Photosynthesis (mg/L/g anemone protein content)"
  )
```

```{r}
gp_aov <- aov(gross_photosynthesis ~ treatment,
  data = phot_rates
)

summary(gp_aov)
```

# Join the P&R rates data

Join the respiration rates and photosynthesis rates dataframes

```{r}
rates <- left_join(resp_rates, phot_rates) %>% 
    mutate(respiration_wetweight = resp_rate_adj_run_norm_wetweight,
         net_photosynthesis = phot_rate_adj_run_norm) %>% 
  select(c('id',
           'treatment', 
           'run', 
           'channel',
           'respiration_wetweight',
           'net_photosynthesis',
           'gross_photosynthesis')) %>% 


print(rates)
```

```{r}
write.csv(rates, "rates.csv", row.names = FALSE)
```
