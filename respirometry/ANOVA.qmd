# Document for Anova analysis check the git link for the tutorial

# ANOVA notes with input

what is it? stat test to see if two or more pop means are different.

primarily used to compare 3 or more groups

# Test we are using is one-way anova specifically

If the between variance is significantly larger than the within variance, the group means are declared to be different

variance comparison done using the ratio (variance between/ variance within)

after ratio is complete compare to fisher probability threshold (F-test)

How to do (example using the penguins data set):

#install.packages("palmerpenguins")

#library(palmerpenguins)

#library(tidyverse) \# dat \<- penguins %\>% \# select(species, flipper_length_mm)

#replace this with the resp or Photosynth data \#

note: the pipe operator (%\>%) takes the output of the expression on its left and passes it as the first argument to the function on its right

#summary(dat)

Aim of ANOVA: #study whether measurements are similar across different modalities (also called levels or treatments in the context of ANOVA) of a categorical variable #compare the impact of the different levels of a categorical variable on a quantitative variable #explain a quantitative variable based on a qualitative variable

# Null and Alternative hypothesis

H0: 1=2=3 (equal across the data sets)

H1: AT LEAST one is different from the other two (could be any of the lot)

large sample is n \>= 30

if normality is assumed, test the homogeneity of variances #variances equal, ANOVA #variances not equal, Welch ANOVA #normality not assumed, Kruskal-Wallis test

## Direct implication:

Anemone treatments are the variables

# How to do it

# install tidyverse, dplyr, car and load

```{r}
if ("tidyverse" %in% rownames(installed.packages()) == 'FALSE') install.packages('tidyverse')
if ("dplyr" %in% rownames(installed.packages()) == 'FALSE') install.packages('dplyr')
if ("car" %in% rownames(installed.packages()) == 'FALSE') install.packages('car')
if ("ggplot2" %in% rownames(installed.packages()) == 'FALSE') install.packages('ggplot2')

library(dplyr)
library(tidyverse)
library(car)
library(ggplot2)
```

# Read in data

```{r}
rates <- read.csv('rates.csv')

print(rates)
```

# Respiration

```{r}
ggplot(rates) +
  aes(x = treatment, y = respiration, color = treatment) +
  geom_jitter() +
  theme(legend.position = "none")
```

## Data normality

```{r}
resp_aov <-  aov(respiration ~ treatment, data = rates)
```

```{r}
par(mfrow = c(1, 2)) # combine plots

# histogram
hist(resp_aov$residuals)

# QQ-plot
qqPlot(resp_aov$residuals,
  id = FALSE # id = FALSE to remove point identification
)
```

## Boxplot

```{r}
ggplot(rates) +
  aes(x = treatment, y = respiration, fill = treatment) +
  geom_boxplot() +  
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(
    title = "Concentration vs. Respiration Rate",
    x = "Leachate concentration (mg/L)",
    y = expression("Respiration Rate (mg O2/min/g) x"~10^-5)
  ) +
  scale_y_continuous(
labels = function(x) x / 1e-5 # Transform the y-axis labels
) +
  scale_x_discrete(labels = c("Control ", "PPa 0.01", "PPa 0.1","PPa 1", "PPa 10", "PPa 100","PVC 0.01", "PVC 0.1", "PVC 1", "PVC 10", "PVC 100")) +  
  scale_fill_manual(values = c("seashell", "coral", "coral1","coral2","coral3", "coral4","dodgerblue","dodgerblue1","dodgerblue2", "dodgerblue3","dodgerblue4")) +
  theme(
plot.title = element_text(size = 20, face = "bold"), # Title text size
axis.title.x = element_text(size = 16), # X-axis title text size
axis.title.y = element_text(size = 16), # Y-axis title text size
axis.text.x = element_text(size = 14), # X-axis text size
axis.text.y = element_text(size = 14), # Y-axis text size
legend.title = element_text(size = 16), # Legend title text size
legend.text = element_text(size = 14) # Legend text size
)
```

## ANOVA

```{r}
resp_aov <- aov(respiration ~ treatment,
  data = rates
)

summary(resp_aov)
```

# Photosynthesis

## First glimpse of data

```{r}
ggplot(rates) +
  aes(x = treatment, y = respiration, color = treatment) +
  geom_jitter() +
  theme(legend.position = "none")
```

## Data normality

```{r}
res_aov <-  aov(respiration ~ treatment, data = rates)
```

```{r}
par(mfrow = c(1, 2)) # combine plots

# histogram
hist(res_aov$residuals)

# QQ-plot
qqPlot(res_aov$residuals,
  id = FALSE # id = FALSE to remove point identification
)
```

## Boxplot

```{r}
ggplot(rates) +
  aes(x = treatment, y = respiration, fill= treatment) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
   labs(
    title = "Concentration vs. Photosynthesis Rate",
    x = "Leachate concentration (mg/L)",
    y = "Photosynthesis Rate (mg O2/min/g)"
  ) +
  scale_x_discrete(labels = c("Control ", "PPa 0.01", "PPa 0.1","PPa 1", "PPa 10", "PPa 100","PVC 0.01", "PVC 0.1", "PVC 1", "PVC 10", "PVC 100")) +  
  scale_fill_manual(values = c("seashell", "coral", "coral1","coral2","coral3", "coral4","dodgerblue","dodgerblue1","dodgerblue2", "dodgerblue3","dodgerblue4")) 
```

## ANOVA

```{r}
phot_aov <- aov(massnorm_phot_rate ~ treatment,
  data = rates
)

summary(phot_aov)
```

## Hypothesis

```{r}
# Set the mean and standard deviation
mean_val <- 0.01
sd_val <- 0.005

# Generate data for each treatment
control_data <- rnorm(5, mean = mean_val, sd = sd_val)
low_data <- rnorm(5, mean = mean_val + 0.01, sd = sd_val)
high_data <- rnorm(5, mean = mean_val + 0.02, sd = sd_val)

# Combine all data
respiration <- c(control_data, low_data, high_data)
treatment <- rep(c('control', 'low', 'high'), each = 5)

# Create dataframe
hyp <- data.frame(respiration = respiration, treatment = treatment)

# Print dataframe
print(hyp)
```

```{r}
# Convert treatment to a factor with desired levels order
hyp$treatment <- factor(hyp$treatment, levels = c('control', 'low', 'high'))

ggplot(hyp) +
  aes(x = treatment, y = respiration, fill= treatment) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
   labs(
    title = "Concentration vs. Respiration Rate",
    x = "Leachate concentration (mg/L)",
    y = "Respiration Rate (mg O2/min/g)"
  )
```

# Fv/Fm

```{r}
newmeta <- read_csv("../metadata/nem_metadata.csv")
```

```{r}
ggplot(newmeta) +
  aes(x = treatment, y = Fv_Fm, fill= treatment) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
   labs(
    title = "Concentration vs. Photosynthetic efficiency",
    x = "Leachate concentration (mg/L)",
    y = "Photosynthetic efficiency (Fv/Fm)"
  ) + 
  scale_x_discrete(labels = c("Control ", "PPa 0.01", "PPa 0.1","PPa 1", "PPa 10", "PPa 100","PVC 0.01", "PVC 0.1", "PVC 1", "PVC 10", "PVC 100")) +  
  scale_fill_manual(values = c("seashell", "coral", "coral1","coral2","coral3", "coral4","dodgerblue","dodgerblue1","dodgerblue2", "dodgerblue3","dodgerblue4")) +
  theme(
plot.title = element_text(size = 20, face = "bold"), # Title text size
axis.title.x = element_text(size = 16), # X-axis title text size
axis.title.y = element_text(size = 16), # Y-axis title text size
axis.text.x = element_text(size = 14), # X-axis text size
axis.text.y = element_text(size = 14), # Y-axis text size
legend.title = element_text(size = 16), # Legend title text size
legend.text = element_text(size = 14) # Legend text size
)

```

```{r}
fvfm_aov <- aov(Fv_Fm ~ treatment,
  data = newmeta
)

summary(fvfm_aov)

```

```{r}
# Generate some fake data
set.seed(123)
low <- rnorm(50, mean = 10, sd = 2)
medium <- rnorm(50, mean = 15, sd = 2)
high <- rnorm(50, mean = 20, sd = 2)

# Combine the data
data <- data.frame(
  Respiration_Rate = c(low, medium, high),
  Leachate_Concentration = rep(c("Low", "Medium", "High"), each = 50)
)

data$Leachate_Concentration <- factor(data$Leachate_Concentration, levels = c("Low", "Medium", "High"))

# Create boxplot
boxplot(Respiration_Rate ~ Leachate_Concentration, data = data, 
        xlab = "Leachate Concentration", ylab = "Respiration Rate", 
        col = c("lightblue", "purple", "lightcoral"),
        main = "Respiration hypothesis")

```

# Hypothesis plots 

```{r}
# Load ggplot2 library
library(ggplot2)

# Generate some fake data
set.seed(123)
high <- rnorm(50, mean = 10, sd = 2)
medium <- rnorm(50, mean = 15, sd = 2)
low <- rnorm(50, mean = 20, sd = 2)

# Combine the data
data <- data.frame(
  Respiration_Rate = c(low, medium, high),
  Leachate_Concentration = rep(c("Low", "Medium", "High"), each = 50)
)

# Reverse the order of levels for Leachate_Concentration
data$Leachate_Concentration <- factor(data$Leachate_Concentration, levels = c("Low", "Medium", "High"))

# Create ggplot
ggplot(data, aes(x = Leachate_Concentration, y = Respiration_Rate, fill = Leachate_Concentration)) +
  geom_boxplot() +
  labs(x = "Leachate Concentration", y = "Photosynthetic Rate",
       title = "Photosynthetic Effeciency vs. Leachate Concentration") +
  scale_fill_brewer(palette = "Set2", breaks = rev(levels(data$Leachate_Concentration)),
                    labels = c("High" = "High", "Medium" = "Medium", "Low" = "Low")) +
  theme_minimal()


```

```{r}
#Load ggplot2 library
library(ggplot2)

# Generate some fake data
set.seed(123)
low <- rnorm(50, mean = 10, sd = 2)
medium <- rnorm(50, mean = 15, sd = 2)
high <- rnorm(50, mean = 20, sd = 2)

# Combine the data
data <- data.frame(
  Respiration_Rate = c(low, medium, high),
  Leachate_Concentration = rep(c("Low", "Medium", "High"), each = 50)
)

data$Leachate_Concentration <- factor(data$Leachate_Concentration, levels = c("Low", "Medium", "High"))


# Create ggplot
ggplot(data, aes(x = Leachate_Concentration, y = Respiration_Rate, fill = Leachate_Concentration)) +
  geom_boxplot() +
  labs(x = "Leachate Concentration", y = "Respiration Rate",
       title = "Respiration Rate vs. Leachate Concentration") +
  scale_fill_brewer(palette = "Set2", breaks = rev(levels(data$Leachate_Concentration)),
                    labels = c("Low" = "Low", "Medium" = "Medium", "High" = "High")) +
  theme_minimal()


```
